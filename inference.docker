#jpchen-autoinference-gpu
#latest
#.
#
FROM ailabs-common:devAutotune-test-2018_8_16_15_40_39

RUN wget -O - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub | apt-key add -

RUN echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list

ENV CUDA_VERSION 9.0.176
ENV CUDA_PKG_VERSION 9-0=$CUDA_VERSION-1
ENV CUBLAS_PKG_VERSION 9-0=$CUDA_VERSION.2-1

RUN echo "deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main" > /etc/apt/sources.list

RUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install -y --no-install-recommends \
        cuda-nvrtc-$CUDA_PKG_VERSION \
        cuda-nvgraph-$CUDA_PKG_VERSION \
        cuda-cusolver-$CUDA_PKG_VERSION \
        cuda-cublas-$CUBLAS_PKG_VERSION \
        cuda-cufft-$CUDA_PKG_VERSION \
        cuda-curand-$CUDA_PKG_VERSION \
        cuda-cusparse-$CUDA_PKG_VERSION \
        cuda-npp-$CUDA_PKG_VERSION \
        cuda-cudart-$CUDA_PKG_VERSION && \
    ln -s cuda-9.0 /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*

# nvidia-docker 1.0

LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}

ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/local/nvidia/lib:/usr/local/cuda/extras/CUPTI/lib64/:$LD_LIBRARY_PATH

# nvidia-container-runtime

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>=9.0"

# Install devel
RUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install -y --no-install-recommends \
        cuda-core-$CUDA_PKG_VERSION \
        cuda-misc-headers-$CUDA_PKG_VERSION \
        cuda-command-line-tools-$CUDA_PKG_VERSION \
        cuda-nvrtc-dev-$CUDA_PKG_VERSION \
        cuda-nvml-dev-$CUDA_PKG_VERSION \
        cuda-nvgraph-dev-$CUDA_PKG_VERSION \
        cuda-cusolver-dev-$CUDA_PKG_VERSION \
        cuda-cublas-dev-$CUBLAS_PKG_VERSION \
        cuda-cufft-dev-$CUDA_PKG_VERSION \
        cuda-curand-dev-$CUDA_PKG_VERSION \
        cuda-cusparse-dev-$CUDA_PKG_VERSION \
        cuda-npp-dev-$CUDA_PKG_VERSION \
        cuda-cudart-dev-$CUDA_PKG_VERSION \
        cuda-driver-dev-$CUDA_PKG_VERSION && \
    rm -rf /var/lib/apt/lists/*
ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}

# Install CUDNN

ENV CUDNN_VERSION 7.0.5.15
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install -y --no-install-recommends \
        libcudnn7=$CUDNN_VERSION-1+cuda9.0 \
        libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 && \

    rm -rf /var/lib/apt/lists/*

# RUN add-apt-repository ppa:jonathonf/python-3.6 && apt-get update && apt-get install -y build-essential python3.6 python3.6-dev python3-pip python3.6-venv


ENV PYTHON_VERSION=3.6

RUN curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
#     /opt/conda/bin/conda install conda-build && \
     /opt/conda/bin/conda create -y --name autoinference-py$PYTHON_VERSION python=$PYTHON_VERSION numpy pyyaml scipy mkl&& \
     /opt/conda/bin/conda clean -ya

# RUN echo "source activate autoinference-py3.6" > ~/.bashrc

ENV PATH /opt/conda/envs/autoinference-py$PYTHON_VERSION/bin:$PATH

# ENV PYTHONPATH /home/pyro_models:$PYTHONPATH

RUN export CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

RUN /opt/conda/bin/conda update -n base conda -y

RUN pip install mkl-include

RUN /opt/conda/bin/conda install pytorch cudatoolkit=9.0 -c pytorch

# install slow packages

RUN pip install cython click PyYAML numpy cloudpickle cassandra-driver pandas sklearn scipy opencv-python pyproj pytest scikit-image simplejson matplotlib

RUN mkdir /root/.pip/ && echo "[global]\ndisable-pip-version-check = yes\nextra-index-url = https://pypi.python.org/simple\nindex-url = https://yoober7:ood5geishoothue8peT5ieCoCa9ieNef@pypi.uberinternal.com/index\ntimeout = 60" > /root/.pip/pip.conf

RUN pip install ailabs_util

# using stefan's fork/branch
RUN pip install git+git://github.com/stefanwebb/pyro.git@for_jp

# RUN pip install git+git://github.com/pyro-ppl/pyro-models.git@master

# for manage_experiments stuff
RUN pip install tqdm google-api-python-client google-auth-httplib2 google-auth-oauthlib

COPY manage-experiments /home/manage-experiments

RUN cd /home/manage-experiments; python setup.py develop

COPY pyro_models /home/pyro_models

COPY run_single_experiment.py /home/
COPY utils.py /home/
COPY plot.py /home/
COPY stats.py /home/
COPY mse.py /home/
COPY ess.py /home/
COPY enum_ess.py /home/
COPY enum_iwelbo.py /home/
COPY model_constants.py /home/
COPY run_nuts.py /home/

WORKDIR /home/

# RUN pytest -vs /home/pyroiei/

# COPY pyro /root/pyro

# COPY pyroiei /root/pyroiei

# COPY clean_setup.py /root/pyro/setup.py

# RUN python /root/pyro/setup.py build develop
